{"pages":[{"title":"Not Found","text":"お探しの記事は見つかりませんでした。","link":"/404.html"}],"posts":[{"title":"アフィリエイト向けブログを無料で公開する方法","text":"ブログ運用にあたってランニングコストや利便性、拡張性でお困りの方！無料でブログを作成する方法はいくらでもあります。 例えば、Amebaや楽天、yahoo!等企業が提供している無料ブログを利用する手段があります。 導入も簡単で利用開始手順も明確、企業が運営しているので、セキュリティやSEO対策面でもどことなく安心！ そう思って使い始めた企業ブログでも、実際に運用を始めたら・・・ 他ブログとの差別化がしづらい お洒落なテンプレートがない ガジェットも配置できず、カスタマイズもできない 提供元の広告が貼られており、好きなところに広告が貼れない 等、悩みの種が尽きません・・・ そこで、本記事ではブログのデザインと拡張性に直目して(もちろん無料)アフィリエイト向けブログ作成方法をご紹介したいと思います。 Github Pages利用 インターネット上でソースコードのバージョン管理を行うために、プラットフォーム「Github」を利用されている方が多いと思いますが、そのGitHubが提供している静的コンテンツのホスティングサービスが「Github Pages」です！ 【 メリット 】 無料で個人ドメインを取得することができる 爆速でSSL証明付きのWebサイトを構築することができる(5分未満) コマンド1発！ビルド＆デプロイ(Web公開)が容易 レンタルサーバやドメインの契約が不要であるため、維持費がかからない Webサイト(静的コンテンツ)のカスタマイズ性は無限大！！！ 【 デメリット 】 フロントエンド(HTML,CSS,JS等)の知識が必要 と、メリットを見る分には利用しない手はないですが、利用者によっては「プログラミングをしたことがない・・・」「そもそもGithubって・・・」という方もおられると思います。大丈夫です！安心してください！！ 今からお伝えする手順を実行するだけで、パソコンを持っている方なら”どなた”でも作成することができます。 それでは早速手順を紹介していきますが、本記事では爆速でブログを公開できるようにするため、余計な操作は一切省略して説明します。 ※ 役立ち情報や外伝的な内容は別途まとめてご紹介いたしますのでご安心ください。 １．Github アカウント登録 まずは「Github公式ページ」へアクセスしましょう！ Githubアカウントをお持ちの方は「Sign in」から、お持ちでない方は「Sign up」へ進んでください。 アカウント情報のチェック完了後謎解きパズルに挑戦して自信がロボットではないことを証明します！(簡単です) 無事にパズルを完成することができたら、利用プランを選択します。ここで選択するのはもちろん”Choose Free(無料プラン)”です！！ 利用プランを選択したらひとまずセットアップは完了です。「Complete setup」を押しましょう。 アカウント作成時に登録したメールアドレスに確認メールが送信されているので、二段階認証(本人確認)を行います。 下記のような確認メールが来ました！「Verlfy email address」を押してこのまま認証を完了させます。 ２．Github リポジトリ作成 メール本文のリンクにアクセスするとリポジトリの作成画面に遷移します。 ※ リポジトリの作成はもちろんマイページからも可能です。 「Repository Name」の入力欄に「[アカウントID].github.io」と入力し、その他のオプションは変更せずに「Create repository」を押してください。 これでリポジトリの作成は完了です！この後、Githubとローカル環境でSSH設定を行い、リモートリポジトリのクローンを行いますが、その際に必要となるソースURLを保存しておきましょう。 ※ ソースURLはQuick setup ~ のSSH用のパスを参照してください。 ３．Github SSH設定 ここからはCUI操作が増えてきますので、Mac OSの場合は「ターミナル」を、Windowsの場合は「コマンドプロンプト」起動しておきます。 起動後、認証用鍵を管理するディレクトリへ移動し、公開鍵と秘密鍵を生成するコマンドを実行します。 12$ cd ~/.ssh$ ssh-keygen -t rsa コマンドを実行すると、生成する鍵ファイルに名前を付けるか聞かれるので(2行目)任意の名前を付けて(ここではid_rsa_info)パスフレーズ(3行目、4行目)を設定すれば生成完了です。 1234Generating public/private rsa key pair.Enter file in which to save the key (/Users/(username)/.ssh/id_rsa): [任意の鍵ファイル名(id_rsa_info)]Enter passphrase (empty for no passphrase): [パスワード]Enter same passphrase again: [パスワード再確認] ~/.sshに「id_rsa_info」「id_rsa_info.pub」が生成されているので、公開鍵の方「id_rsa_info.pub」の中身(暗証文字列)をコピーしてください。 コピーした公開鍵情報を登録するために、一度Githubへ戻り、自身のプロフィール画面/設定タブより「Settigs」を選択 すると、各種詳細設定画面が開くので、「SSH and GPG keys」を選んで、「New SSH key」を押してください。 「Title」に任意の名前を付けて、「Key」にさきほどコピーした公開鍵情報をペーストして「Add SSH Key」を押せば登録完了です。 ４．Github ローカル環境からリモートリポジトリをクローン ローカル環境からSSHでリモートリポジトリをクローンしてくるために、コンフィグファイルへ(無ければ生成し)、アカウントIDと鍵ファイル名を記述します。 ※ 鍵ファイルに任意の名前を付けていますが、ローカル環境からSSH接続する際に、デフォルトの参照鍵ファイル名が「~/.ssh/id_rsa」」である為、ここで指定しないとエラーが発生します。 123456789$ vim configHost [アカウントID(kyoumo-daradara-info)] HostName github.com User git Port 22 IdentityFile ~/.ssh/[鍵ファイル名(id_rsa_info)] TCPKeepAlive yes IdentitiesOnly yes 設定後にSSH接続の疎通確認をします。「successfully authenticated」のメッセージが出ていれば疎通は取れているので、いよいよリモートリポジトリをクローンしていきます。 1234$ ssh -T [HOST名(kyoumo-daradara-info)]Enter passphrase for key '/Users/(userneme)/.ssh/id_rsa_info': [パスワード]Hi kyoumo-daradara-info! You've successfully authenticated, but GitHub does not provide shell access. 手順2でリポジトリを作成した際にコピーしたソースURLを使って、ワークディレクトリ内にリモートリポジトリをダウンロードします。 ※ リポジトリ作成時点では管理フォルダ/ファイルは無いので、空のディレクトリが1つワークディレクトリ内にできます。 12$ cd [ワークディレクトリ]$ git cloen [ソースURL(git@github.com:kyoumo-daradara-info/kyoumo-daradara-info.github.io.git)] ５．Hexo インストール まずは、oexo用のコマンドラインインターフェイスをnpmを使用してインストールします。 1$ npm install -g hexo-cli インストール時にnpmのバージョンが古すぎて怒られた場合は、大人しくバージョンを上げましょう。 12$ npm --vertion$ npm install -g npm 次に、クローンしてきたリポジトリ内にHexo本体をダウンロードします。ダウンロード後Hexo内へ移動し、npmコマンドを使用して必要なパッケージをダウンロードしていきます。 123$ hexo init 任意のフォルダ名$ cd 任意のフォルダ名$ npm install ６．Hexo ローカルホスト起動(ブログ確認) Hexoをダウンロードするだけでブログの卵ができているので、ローカルホストを起動して確認してみましょう。 ※ オプションでポート指定(-p)をしなければ、デフォルトのポート番号は4000です。 1$ hexo s -p 8888 これだけで、企業が提供しているブログテンプレートと同等の個人ブログを作成することができました。最後に、このマイブログをインターネット上に公開してみます。 ７．Hexo デプロイ(ブログ公開) Hexoのコンフィグファイルにデプロイ先(リポジトリ)のソースURLを指定します。 12345678$ vim _comfig.yml# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: [ソースURL] branch: master ビルド＆デプロイとGithub連携を同時に行ってくれる便利モジュールをインストールします。 一度コマンドを実行するだけで、ビルド＆デプロイとソースコードのバージョン管理を実現してくれます。 ブラウザで「https://[リポジトリ名]」にアクセスして確認してみてください。 12npm install hexo-deployer-git --savehexo deploy -g いかがでしたでしょうか。「Github Pages」と「Hexo」を用いて、あっという間にブログの卵をWebに公開することができました。次回はブログをお洒落にカスタマイズする方法をご紹介したいと思います。","link":"/2019/12/16/hexo-introduction/"}],"tags":[{"name":"Github","slug":"Github","link":"/tags/Github/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"プログラミング","slug":"プログラミング","link":"/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/"}]}